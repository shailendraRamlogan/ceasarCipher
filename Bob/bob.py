import socket
import pickle
from Crypto.PublicKey import RSA
from hashlib import sha256

#initialize socket to send public key
host = socket.gethostname()
client = socket.socket()
port = 12345
client.connect((host, port))
l = client.recv(1024) #recieve private key and write to file
publicFile = open("alicepublic.dat", "w")
publicFile.write(l.decode('utf-8'))
publicFile.close()
client.close()


#initialize socket to send message
server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
host = socket.gethostname()
port = 1234
server.bind((host, port))
server.listen(1)
s, addr = server.accept()
x = s.recv(1024)#recieve message
msg = pickle.loads(x)#parse with pickle
message = msg[1]#get original text
hashMessage = msg[2]#get original hashMessage
signature = msg[3]#get original signature


#import public key from file
encryptedPublicKey = open("alicepublic.dat","r").read()
publicKey = RSA.import_key(encryptedPublicKey)

#create new hash with data recieved
hashFromSignature = pow(signature, publicKey.e, publicKey.n)


#compare hash that alice sent to the one generated by bob to test auth
if(hashFromSignature == hashMessage):
    print('Authentication and Integrity checks were successful: ')
    print('Message: ', message.decode())
server.close()


